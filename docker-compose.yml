version: '3.1'

services:
  nestjs-ddd-db:
    image: postgres:16-alpine
    hostname: nestjs-ddd-db
    container_name: nestjs-ddd-db
    restart: no
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:5432

  zoo1:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zoo1
    container_name: zoo1
    ports:
      - ${ZOOKEEPER1_CLIENT_PORT}:${ZOOKEEPER1_CLIENT_PORT}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER1_CLIENT_PORT}
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka1
    container_name: kafka1
    ports:
      - ${KAFKA1_EXTERNAL_PORT}:${KAFKA1_EXTERNAL_PORT}
      - ${KAFKA1_DOCKER_PORT}:${KAFKA1_DOCKER_PORT}
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:${KAFKA1_INTERNAL_PORT},EXTERNAL://${DOCKER_HOST_IP}:${KAFKA1_EXTERNAL_PORT},DOCKER://host.docker.internal:${KAFKA1_DOCKER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zoo1:${ZOOKEEPER1_CLIENT_PORT}
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  kafka2:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka2
    container_name: kafka2
    ports:
      - ${KAFKA2_EXTERNAL_PORT}:${KAFKA2_EXTERNAL_PORT}
      - ${KAFKA2_DOCKER_PORT}:${KAFKA2_DOCKER_PORT}
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:${KAFKA2_INTERNAL_PORT},EXTERNAL://${DOCKER_HOST_IP}:${KAFKA2_EXTERNAL_PORT},DOCKER://host.docker.internal:${KAFKA2_DOCKER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zoo1:${ZOOKEEPER1_CLIENT_PORT}
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1


  kafka3:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka3
    container_name: kafka3
    ports:
      - ${KAFKA3_EXTERNAL_PORT}:${KAFKA3_EXTERNAL_PORT}
      - ${KAFKA3_DOCKER_PORT}:${KAFKA3_DOCKER_PORT}
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:${KAFKA3_INTERNAL_PORT},EXTERNAL://${DOCKER_HOST_IP}:${KAFKA3_EXTERNAL_PORT},DOCKER://host.docker.internal:${KAFKA3_DOCKER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zoo1:${ZOOKEEPER1_CLIENT_PORT}
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  debezium:
    image: debezium/connect:2.5
    container_name: debezium
    hostname: debezium
    depends_on:
      - nestjs-ddd-db
      - kafka1
      - kafka2
      - kafka3
    ports:
      - ${DEBEZIUM_PORT}:8083
    environment:
      BOOTSTRAP_SERVERS: ${DOCKER_HOST_IP}:${KAFKA1_EXTERNAL_PORT},${DOCKER_HOST_IP}:${KAFKA2_EXTERNAL_PORT},${DOCKER_HOST_IP}:${KAFKA3_EXTERNAL_PORT}
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      ENABLE_DEBEZIUM_SCRIPTING: 'true'
